#!/usr/bin/env python

import argparse
parser = argparse.ArgumentParser(
    description="Update FITS headers with template information")
parser.add_argument('template', help='The template FITS file')
parser.add_argument('SN', nargs="+", help='The template FITS file')

args = parser.parse_args()

from astropy.io import fits
import os
import re

CSPpat = re.compile(r'[^\/_]+_[uBVgri][0-9][0-9]_SWO_NC_[0-9]{4,4}_[0-9]{2,2}'\
                    r'_[0-9]{2,2}\.fits')

history = []

temp = fits.open(args.template)

# Get info about template.
th = temp[0].header
telescope = th.get('TELESCOP',None)
instrument = th.get('INSTRUME', None)
filename = th.get('FILENAME', "Unknown")
fwhm = th.get('FWHM',-1)
extra = ''
datetime = ''

if telescope == 'SWO':
    datetime = th.get('UT-DATE') + "T" + th.get('UT-TIME')
    # Try to get a better path name
    res = CSPpat.search(os.path.realpath(args.template))
    if res:
        filename = res.group(0)

# Cases that are a little more complicated
if telescope is None and instrument is None:
    # check other cases
    if th.get('FPA.TELESCOPE', None) is not None:
       telescope = th.get('FPA.TELESCOPE')
       instrument = th.get('FPA.INSTRUMENT')
       extra = 'Downloaded from PANSTARRS server'
    else:
        telescope = "Uknown"
        instrument = "Unknown"
        extra = "Could not determine template source"

if telescope.strip() == "SkyMapper":
    extra = "Downloaded from SkyMapper server"


history.append("TEMPSUB:  ImageMatch 0.1.0 template subtraction")
history.append(f"TEMPSUB:  telescope: {telescope}")
history.append(f"TEMPSUB:  instrument: {instrument}")
history.append(f"TEMPSUB:  filename: {filename}")
if datetime:  history.append(f"TEMPSUB:  Date = {datetime}")
if fwhm > 0: history.append(f"TEMPSUB:  template fwhm: {fwhm}")
if extra:  history.append(f"TEMPSUB:  {extra}")

for sn in args.SN:
    fts = fits.open(sn)
    for line in history:
        fts[0].header['HISTORY'] = line
    fts.writeto(sn, overwrite=True)